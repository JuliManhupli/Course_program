#include "game.h" //підключення заголовного файлу

//метод guess класу animal відповідає за визначення загаданої тварини
void animal::guess() {
	bool a[6] = { false }; //масив з відповідями користувача

	a[0] = dialog("Основним способом переміщення цієї тварини є сухопутний?");
	if (a[0]) {
		a[1] = dialog("Ця тварина - хижак?");
		if (a[1]) {
			a[2] = dialog("Ця тварина - ссавець?");
			if (a[2]) {
				//Група 1
				a[3] = dialog("Теплі широти є ареалом проживання цієї тварини?");
				if (a[3]) {
					a[4] = dialog("Ця тварина належить до підряду котовиді?");
					if (a[4]) {
						a[5] = dialog("Вага дорослої особи більше тридцяти кілограмів?");
					}
					else {
						a[5] = dialog("Ця тварина належить до сімейства псові?");
					}
				}
				else {
					a[4] = dialog("Ця тварина може жити в субарктичному кліматі?");
					if (a[4]) {
						a[5] = dialog("Ця тварина належить до сімейства псові?");
					}
				}
			}
			else {
				//Група 2
				a[3] = dialog("Ви загадали рептилію?");
				if (a[3]) {
					a[4] = dialog("Ця тварина має кінцівки?");
				}
			}
		}
		else {
			a[2] = dialog("Ця тварина всеїдна?");
			if (a[2]) {
				//Група 3
				a[3] = dialog("Ця тварина може проживати в Європі?");
				if (a[3]) {
					a[4] = dialog("Ця тварина важить менше двох кілограмів?");
					if(!a[4]) {
						a[5] = dialog("Ця тварина є одомашненою?");
					}
				}
				else {
					a[4] = dialog("Ця тварина є приматом?");
					if (a[4]) {
						a[5] = dialog("Ця тварина мешкає в Африці?");
					}
				}
			}
			else {
				//Група 4
				a[3] = dialog("Ця тварина є представником надряду копитні?");
				if (a[3]) {
					a[4] = dialog("Є одомашнені особі цієї тварини?");
					if (a[4]) {
						a[5] = dialog("Ця тварина є представником родини бикові?");
					}
					else {
						a[5] = dialog("Ця тварина живе в Африці?");
					}
				}
				else {
					a[4] = dialog("Ця тварина живе в Америці?");
					if (a[4]) {
						a[5] = dialog("Ця тварина - гризун?");
					}
					else {
						a[5] = dialog("Ця тварина живе в Африці?");
					}
				}
			}
		}
	}
	else {
		a[1] = dialog("Ця тварина живе у воді?");
		if (a[1]) {
			a[2] = dialog("Ця тварина - риба?");
			if (a[2]) {
				//Група 5
				a[3] = dialog("В основному ця тварина плаває у прісній воді?");
				if (a[3]) {
					a[4] = dialog("Ця тварина плаває лише у прісній воді?");
				}

				else {
					a[4] = dialog("Ця тварина належить до класу променепері?");
				}
			}
			else {
				//Група 6
				a[3] = dialog("Ця тварина є ссавцем?");
				if (a[3]) {
					a[4] = dialog("В основному ця тварина плаває у прісній воді?");
					if (a[4]) {
						a[5] = dialog("Ви загадали гризуна?");
					}
					else {
						a[5] = dialog("Ця тварина дихає через дихало?");
					}
				}

				else {
					a[4] = dialog("Може ця тварини змінювати колір за власним бажанням?");
				}
			}
		}
		else {
			a[2] = dialog("Ви загадали птаха?");
			if (a[2]) {
				//Група 7
				a[3] = dialog("Селиться ця тварина біля води?");
				if (a[3]) {
					a[4] = dialog("Ця тварина плаває по воді?");
				}
				else {
					a[4] = dialog("Ви загадали травоїдну тварину?");
				}
			}
			else {
				//Група 8
				a[3] = dialog("Ця тварина належить до класу комахи?");
				if (a[3]) {
					a[4] = dialog("Ця тварина - хижак?");
				}
			}
		}
	}

	if (!enumeration(a)) { //якщо тварину вгадано
		cout << "\033c";
		owl(4,"Ура! Вгадала!");
		this->status = "guessed"; //зміна статусу об'єкта animal на "вгадано"
	}
	else { //якщо тварину не вгадано
		remember(a);
	}
}

//конструктор класу owl відповідає за вивід зображення маскота і тексту для спілкування
owl::owl(int num, const char *str) { //передаєсмо номер зображення і текст повідомлення
	char ch; //символьна зміна для виводу зображення маскота
	char way[20];//шлях до сови
	
	strcpy(way, "..\\mascot\\owl0.txt");
	way[13] = num + ZERO; //вибір якого файлу буде відкриття
	
	//відкриття файлу
	in.open(way);
	if (!in.is_open()) {
		cout << "Помилка! Перевстановіть бібліотеки." << endl;
		cout << "Для виходу натисніть Enter" << endl;
		while(getchar()!='\n'); //поки не буде натиснуто Enter
		exit(1);
	}
	cout << endl;
	//виведення файлу на єкран
	in.unsetf(ios::skipws);
	while (in >> ch) {
		cout << ch;
	}
	
	in.close();//закриття файлу

	cout << endl << endl << str << endl; //вивід тексту повідомлення
}

//функція для введення діплогу з користувачем
bool dialog(const char *str, int num) {	//передаєсмо текст повідомлення і номер зображення
	int ans; //відповідь користувача
	bool a, ind;//значення відповіді користувача; індикатор правильності вводу користувача
	
	cout << "\033c";
	srand(time(0));
	owl((num == -1)? rand()%4:num, str); //якщо num = -1, то генеруемо будь-яке зображення маскота
	//інструкція введення відповіді
	cout << endl;
	cout << "1. Так" << endl;
	cout << "2. Ні" << endl;
	cout << "3. Довідка" << endl;
	cout << endl;
	
	ind = true;
	//зчитування відповіді
	while (ind) { //поки користувач не введе корректну відповідь
		ans = input_num(); //зчитування відповіді користувача
		switch (ans) {
			case 1: a = true; ind = false; break; //відповідь "так"
			case 2: a = false; ind = false; break; //відповідь "ні"
			case 3: directory(); a = dialog(str); ind = false; break; //виклик довідки
			default: break;//некорректний ввід
		}
	}
	return a; //передаємо результат відповіді
}

//функція перебору списків з тваринами
bool enumeration(bool *a) { //передаємо відповіді користувача
	ifstream in;//змінна файлу
	bool ans;//відповідь користувача 
	char animal[40];//назва тварини
	char way[22];//шлях до файлу зі списком
	char text[50];//текст запитання
	strcpy(way, "..\\animals\\000000.txt");
	
	//відкриття потрібного списку
	for(int i=0; i<6; i++){
		if(a[i]){
			way[i+11] = '1';
		}
	}

	in.open(way);//відкриття файлу зі списком
	if (!in.is_open()) {
		cout << "Помилка! Перевстановіть бібліотеки." << endl;
		cout << "Для виходу натисніть Enter" << endl;
		while(getchar()!='\n'); //поки не буде натиснуто Enter
		exit(1);
	}
	
	//пошук загаданої тварини в списку
	ans = true;
	while (ans && in.getline(animal, 40, '.')) {
		//створення питання
		strcpy(text, "Загадана вами тварина, це - ");
		strcat(text, animal);
		strcat(text, "?");
		//отримання відповіді
		ans = !dialog(text);
	}
	in.close();//закриття файлу
	return ans;//повернення відповіді
}

//запамятовує назви тварин, яких нема у базі
void remember(bool *a) {
	string str;//назва тварини введеної користувачем
	char text[500];//текст повідомлення
	ofstream out; 
	
	cout << "\033c";
	//запрошення для введення назви тварини
	owl(0,"Введіть назву тварини.\nЯ сприймаю текст написаний лише українською мовою, в нижньому регістрі.");

	getline(cin, str);//зчитування назви

	if (check(a, str)) {//Якщо тварини немає в базі
		strcpy(text, "Мені невідома така тварина. Ви правильно ввели назву тварини?\nВи ввели: ");
		strcat(text, str.c_str());//додавання до тексту назви введеної тварини
		//Перевірка правельності вводу користувача
		if (dialog(text)) {//якщо користувач піддтвердив правильність вводу
			//внесення до бази невідомих тварин
			out.open("..\\remember.txt", ios::app);
			out << str << endl;
			out.close(); 
			cout << "\033c";
			//повідомляє користувача про внесення тварини до бази невідрмих тварин
			owl(0,"Я спробую запам'ятати цю тварину.");
		}
		else {//якщо користувач не піддтвердив правильність вводу
			remember(a);
		}
	}
}

//перевірка наявності тварини в базі
bool check(bool *a, string str) {
	bool ind;//індикатор наявності тварини в базі
	bool ind1;//індикатор помилкової відповіді
	int d[6];//правильні відповіді
	char text[200];//текст запитання
	ifstream in;//файл з базою тварин
	string animal;//назва тварини з бази
	
	in.open("..\\animals\\arr.txt");//відкриття файлу
	if (!in.is_open()) {
		cout << "Помилка! Перевстановіть бібліотеки." << endl;
		cout << "Для виходу натисніть Enter" << endl;
		while(getchar()!='\n'); //поки не буде натиснуто Enter
		exit(1);
	}
	
	//пошук введеної користувачем тварини в базі
	ind = true;
	
	while (ind && getline(in, animal, '.')) {//поки не знайдена тварина або поки не зчитає всі тварини з бази
		
		if (str == animal) {//якщо введена тварина співпадае з твариною із бази
			ind = false;
			//зчитує з бази правильну вілповідь
			for(int i=0; i<6; i++){
				in >> d[i];
			}
			
			cout << "\033c";	
			strcpy(text, "Ви неправильно відповіли на 0-е питання. Ознайомтесь з довідкою.");

			//повідомляє користувача про помилку
			ind1 = true;
			for(int i=0; i<6 && ind1; i++){
				if(d[i] != a[i]){
					text[52] = i + ZERO + 1; 
					owl(2, text);
					ind1 = false;
				}
			}
			if(ind1){
				owl(2,"Ви пропустили тварину при переліку. Ознайомтесь з довідкою.");
			}
			
		}
		in.seekg(13,ios_base::cur);//пропускає зчитування правильних відповідей
	}
	return ind;//повертає індекатор наявності тварини в базі
}

//довідка
void directory() {
	char way[100];//шлях до файлу з переліком
	int num;//номер сторінки
	bool ind;//індикатор завершення роботи довідки
 	char ch;//змінна для виведення текстовихт файлів
 	int ans;//відповідь користувача
 	ifstream in;//файл сторінки довідки
	
	strcpy(way, "..\\directory\\list\\1.txt");//шлях до першої сторінки
	num = 1;
	//вивід списку тварин довідки
	ind = true;
	while(ind) {//поки користувач не завершить роботу з довідкою
		cout << "\033c";
		//вивід слова "ДОВІДКА"
		in.open("..\\directory\\name.txt");
		if (!in.is_open()) {
			cout << "Помилка! Перевстановіть бібліотеки." << endl;
			cout << "Для виходу натисніть Enter" << endl;
			while(getchar()!='\n'); //поки не буде натиснуто Enter
			exit(1);
		}
		in.unsetf(ios::skipws);
   		while(in>>ch){
        	cout << ch;
    	}
    	in.close();
		
    	//перевірка номеру сторінки
		if (num>5){
			num = 5;
		}
		if (num<1) {
			num = 1;
		}
		
		way[18] = ZERO + num;//заповнення номеру сторінки до шляху файлу з переліком
		
		in.open(way);//відкриття файла
		if (!in.is_open()) {
			cout << "Помилка! Перевстановіть бібліотеки." << endl;
			cout << "Для виходу натисніть Enter" << endl;
			while(getchar()!='\n'); //поки не буде натиснуто Enter
			exit(1);
		}
		
		//вивід файла
		in.unsetf(ios::skipws);
   		while(in>>ch){
        	cout << ch;
    	}		
    	in.close();//закриття файла
		
    	ans = input_num();//зчитування відповіді користувача
		//аналіз відповіді користувача
    	switch(ans){
    		case 200://перехід на попередню сторінку
    			num--;
    			break;
    		case 300://перехід на наступну сторінку
    			num++;
    			break;
    		case 0://вихід з довідки
    			ind = false;
    			break;
    		default://обрана тварина
    		    if (ans <= NUM_ANIMALS && ans>0){
    				open_animal(ans);//вивід опису про тварину
					break;
    		}
    	}
	}
}

//відкриття опису тварини
void open_animal(int ans){
	char way[100];//шлях до файлу з описом тварини
	char animal[100];//назва тварини з файлу animals_list.txt
	char ch;//змінна для виводу текстових файлів
	ifstream in;//змінна для файлів
	
	in.open("..\\directory\\animals_list.txt");//відкриття файлу зі списком тварин
	if (!in.is_open()) {
		cout << "Для виходу натисніть Enter" << endl;
		while(getchar()!='\n'); //поки не буде натиснуто Enter
		cout << "Помилка! Перевстановіть бібліотеки." << endl;
		exit(1);
	}
	//зчитування назви тварини під номером ans
	for (int i=0; i<ans; i++){
		in.getline(animal, 50, ' ');
	}
	
	in.close();//закриття файлу
	
	//шлях до файлу з описом тварини
	strcpy(way, "..\\directory\\animals\\");
	strcat(way, animal);
	strcat(way, ".txt");
	
	in.open(way);//відкриття файлу з описом тварини
	if (!in.is_open()){
		cout << "Помилка! Перевстановіть бібліотеки." << endl;
		exit(1);
	}
	//вивід вмісту файлу на екран
	in.unsetf(ios::skipws);
	while (in >> ch) {
		cout << ch;
	}
	
	in.close();//закриття файлу
	
	//закриття опису
	cout << endl << "Для продовження натисніть Enter" << endl;
	while(getchar()!='\n');	
}

//введеня чисел користувачем
int input_num() {
    int num, i;//число; інкримент
	char ch[256];//введений користувачем рядок
	
    gets(ch);//зчитування рядка
	
	//Запис числа
	num = 0;
	i = 0;
    while (ch[i]) {//поки не закінчився рядок
        if (ch[i] < ZERO || ch[i] > 57) {//якщо символ не цифра
            i++;//перехід до наступного символу
        }
		else{
            num = num * 10 + ch[i] - ZERO;//запис числа
            i++;
        }
    }
    return num;
}


